name: Build recovery

on:
  workflow_dispatch:
     inputs:
      MANIFEST:
        description: 'manifest'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'branch'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE:
        description: 'device tree'
        required: true
        default: 'https://github.com/xiaoleGun/android_device_xiaomi_wayne-twrp'
      DEVICE_TREE_BRANCH:
        description: 'branch'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'device path'
        required: true
        default: 'device/xiaomi/wayne'
      DEVICE_NAME:
        description: 'device codename'
        required: true
        default: 'wayne'
      MAKEFILE_NAME:
        description: 'makefile name'
        required: true
        default: 'twrp_wayne'
        
jobs:
  Build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04

    steps:
    - name: Remove Useless Package
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        
    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 1024
        swap-size-mb: 10240
        remove-dotnet: 'true'
        temp-reserve-mb: 1024
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Check Out
      uses: actions/checkout@main

    - name: Prepare Environment
      run: |
        export HOME=${GITHUB_WORKSPACE}
        cd ${GITHUB_WORKSPACE}
        sudo apt -y install git aria2 
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sudo bash setup/install_android_sdk.sh || true

    - name: Init Repo
      run: |
        mkdir ${GITHUB_WORKSPACE}/workspace
        cd ${GITHUB_WORKSPACE}/workspace
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        
    - name: Repo Sync
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        repo sync -j4
        ls -al
  
    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
        
    - name: Building recovery
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        . build/envsetup.sh
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        mka bootimage -j2

    - name: Generate info
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        wget https://raw.githubusercontent.com/xiaoleGun/build_recovery_action/main/get_info.sh
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        bash get_info.sh ${{ github.event.inputs.DEVICE_NAME }}

    - name: Upload to Release...
      uses: ncipollo/release-action@v1.8.0
      with:
        artifacts: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/boot.img
        name: ${{ env.RECOVERYISWHAT }}_${{ github.event.inputs.DEVICE_NAME }}_${{ env.BUILD_TIME }}
        tag: ${{ github.event.inputs.DEVICE_NAME }}_${{ env.BUILD_TIME }}
        bodyFile: workspace/info.txt
        token: ${{ secrets.GITHUB_TOKEN }}
